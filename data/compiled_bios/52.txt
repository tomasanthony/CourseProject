 Ranjitha Kumar RANJITHA@ILLINOIS.EDU Curriculum Vitae SIEBEL 4224 FALL 2017 OH: WED 1-2PM I'm an Assistant Professor in the Department of Computer Science and (by courtesy) the Department of Electrical and Computer Engineering at the University of Illinois at Urbana-Champaign . I run the Data Driven Design Group , where my students and I leverage data mining and machine learning to address the central challenge of creating good user experiences: tying design decisions to desired outcomes. I received my PhD from the Department of Computer Science at Stanford University , where I worked with Scott Klemmer . I was formerly the Chief Scientist at Apropose, Inc., a data-driven design company I co-founded, which was backed by Andreessen Horowitz and New Enterprise Associates . SELECTED PUBLICATIONS Learning Design Semantics for Mobile Apps Thomas F. Liu, Mark Craft, Jason Situ, Ersin Yumer, Radomir Mech, and Ranjitha Kumar Proceedings of UIST '18 Recently, researchers have developed black-box approaches to mine design and interaction data from mobile apps. Although the data captured during this interaction mining is descriptive, it does not expose the design semantics of UIs: what elements on the screen mean and how they are used. This paper introduces an automatic approach for generating semantic annotations for mobile app UIs. Through an iterative open coding of 73k UI elements and 720 screens, we contribute a lexical database of 25 types of UI components, 197 text button concepts, and 135 icon classes shared across apps. We use this labeled data to learn code-based patterns to detect UI components and to train a convolutional neural network that distinguishes between icon classes with 94% accuracy. To demonstrate the efficacy of our approach at scale, we compute semantic annotations for the 72k unique UIs in the Rico dataset, assigning labels for 78% of the total visible, non-redundant elements. Learning Type-Aware Embeddings for Fashion Compatibility Mariya I. Vasileva, Bryan A. Plummer, Krishna Dusad, Shreya Rajpal, Ranjitha Kumar, and David Forsyth Proceedings of ECCV '18 Outfits in online fashion data are composed of items of many different types (e.g. top, bottom, shoes) that share some stylistic relationship with one another. A representation for building outfits requires a method that can learn both notions of similarity (for example, when two tops are interchangeable) and compatibility (items of possibly different type that can go together in an outfit). This paper presents an approach to learning an image embedding that respects item type, and jointly learns notions of item similarity and compatibility in an end-to-end model. To evaluate the learned representation, we crawled 68,306 outfits created by users on the Polyvore website. Our approach obtains 3-5% improvement over the state-of-the-art on outfit compatibility prediction and fill-in-the-blank tasks using our dataset, as well as an established smaller dataset, while supporting a variety of useful queries. Designing the Future of Personal Fashion Kristen Vaccaro, Tanvi Agarwalla, Sunaya Shivakumar, and Ranjitha Kumar Proceedings of CHI '18 Advances in computer vision and machine learning are changing the way people dress, and buy clothes. Given the vast space of fashion problems, where can data-driven technologies provide the most value? To understand consumer pain points and opportunities for technological interventions, this paper presents the results from two independent need-finding studies that explore the gold-standard of personalized shopping: interacting with a personal stylist. Through interviews with five personal stylists, we study the range of problems they address and their in-person processes for working with clients. In a separate study, we investigate how styling experiences map to online settings by building and releasing a chatbot that connects users to one-on-one sessions with a stylist, acquiring more than 70 organic users in three weeks. These conversations reveal that in-person and online styling sessions share similar goals, but online sessions often involve smaller problems that can be resolved more quickly. Based on these explorations, we propose future personalized, online interactions that address consumer trust and uncertainty, and discuss opportunities for automation. ZIPT: Zero-Integration Performance Testing of Mobile App Designs Biplab Deka, Zifeng Huang, Chad Franzen, Jeffrey Nichols, Yang Li, and Ranjitha Kumar Proceedings of UIST '17 To evaluate the performance of mobile app designs, designers and researchers employ techniques such as A/B, usability, and analytics-driven testing. While these are all useful strategies for evaluating known designs, comparing many divergent solutions to identify the most performant remains a costly and difficult problem. This paper introduces a design performance testing approach that leverages existing app implementations and crowd workers to enable comparative testing at scale. This approach is manifest in ZIPT, a zero-integration performance testing platform that allows designers to collect detailed design and interaction data over any Android app including apps they do not own and did not build. Designers can deploy scripted tests via ZIPT to collect aggregate user performance metrics (e.g., completion rate, time on task) and qualitative feedback over third-party apps. Through case studies, we demonstrate that designers can use ZIPTs aggregate data and visualizations to understand the relative performance of interaction patterns found in the wild, and identify usability issues in existing Android apps. Rico: A Mobile App Dataset for Building Data-Driven Design Applications Biplab Deka, Zifeng Huang, Chad Franzen, Joshua Hibschman, Daniel Afergan, Yang Li, Jeffrey Nichols, and Ranjitha Kumar Proceedings of UIST '17 Data-driven models help mobile app designers understand best practices and trends, and can be used to make predictions about design performance and support the creation of adaptive UIs. This paper presents Rico, the largest repository of mobile app designs to date, created to support five classes of data-driven applications: design search, UI layout generation, UI code generation, user interaction modeling, and user perception prediction. To create Rico, we built a system that combines crowdsourcing and automation to scalably mine design and interaction data from Android apps at runtime. The Rico dataset contains design data from more than 9.7k Android apps spanning 27 categories. It exposes visual, textual, structural, and interactive design properties of more than 72k unique UI screens. To demonstrate the kinds of applications that Rico enables, we present results from training an autoencoder for UI layout similarity, which supports query-by-example search over UIs. Identifying Fashion Accounts in Social Networks Doris Jung-Lin Lee, Jinda Han, Dana Chambourova, and Ranjitha Kumar KDD Workshop on ML Meets Fashion '17 Fashion and style are characterized by the ebb and flow of trends. With the rise of social media, fashion blogs, and the fast-fashion movement, bottom-up fashion trends are emerging at an ever-increasing rate. Recognizing these trends as they happen --- and the influencers that create them --- is challenging for retailers and consumers alike. As a first step, this paper presents a classifier for identifying fashion-related accounts on social media. To develop this classifier, we created a dataset of 10k Twitter accounts from crawling the set of users followed by ten prominent fashion accounts, and crowdsourced ground-truth labels for them. Based on this training data and a set of content-based features, we trained a classifier that identfies whether or not a Twitter account is fashion-related. In the future, we hope to leverage this classifier to identify key fashion influencers and conduct large-scale monitoring of fashion trends. An Experimentation Engine for Data-Driven Fashion Systems Ranjitha Kumar and Kristen Vaccaro Proceedings of AAAI Symposium on UX of ML '17 Data-driven fashion systems of the future will revolutionize the way consumers shop for clothing and choose outfits: imagine an automated personal stylist that ships clothes straight to your door based on their compatibility with your existing wardrobe, the upcoming events on your calendar, and style trends learned from the web. To build such systems, we must identify the fashion activities that are the largest consumer pain points, the interventions necessary to alleviate those pains, and the computational models that enable those interventions. To guide the design of these next-generation tools, we propose an experimentation engine for fashion interfaces: leveraging social media platforms to run multivariate design tests with thousands to millions of users. Social platforms are already home to dedicated communities of fashion enthusiasts, and expose programmable agents --- chatbots --- that can be used to rapidly prototype data-driven design interfaces. Measuring the number of followers and user engagement amongst these prototypes can inform the design of future standalone fashion systems. At this workshop, we will sketch the design space of fashion experiments, and present preliminary results from deploying our fashion bots. ERICA: Interaction Mining For Mobile Apps Biplab Deka, Zifeng Huang, and Ranjitha Kumar Proceedings of UIST '16 Design plays an important role in adoption of apps. App design, however, is a complex process with multiple design activities. To enable data-driven app design applications, we present interaction mining --- capturing both static (UI layouts, visual details) and dynamic (user flows, motion details) components of an app's design. We present ERICA, a system that takes a scalable, human-computer approach to interaction mining existing Android apps without the need to modify them in any way. As users interact with apps through ERICA, it detects UI changes, seamlessly records multiple data-streams in the background, and unifies them into a user interaction trace. Using ERICA we collected interaction traces from over a thousand popular Android apps. Leveraging this trace data, we built machine learning classifiers to detect elements and layouts indicative of 23 common user flows. User flows are an important component of UX design and consists of a sequence of UI states that represent semantically meaningful tasks such as searching or composing. With these classifiers, we identified and indexed more than 3000 flow examples, and released the largest online search engine of user flows in Android apps. The Elements of Fashion Style Kristen Vaccaro, Sunaya Shivakumar, Ziqiao Ding, Karrie Karahalios, and Ranjitha Kumar Proceedings of UIST '16 The outfits people wear contain latent fashion concepts capturing styles, seasons, events, and environments. Fashion theorists have proposed that these concepts are shaped by design elements such as color, material, and silhouette. A dress may be bohemian because of its pattern, material, trim, or some combination of them: it is not always clear how low-level elements translate to high-level styles. In this paper, we use polylingual topic modeling to learn latent fashion concepts jointly in two languages capturing these elements and styles. Using this latent topic formation we can translate between these two languages through topic space, exposing the elements of fashion style. We train the polylingual topic model (PLTM) on a set of more than half a million outfits collected from Polyvore, a popular fashion-based social network. We present novel, data-driven fashion applications that allow users to express their needs in natural language just as they would to a real stylist and produce tailored item recommendations for these style needs. Learning Interpretable Musical Compositional Rules and Traces Haizi Yu, Lav R. Varshney, Guy E. Garnett, and Ranjitha Kumar Proceedings of ICML WHI '16 Throughout music history, theorists have identified and documented interpretable rules that capture the decisions of composers. This paper asks, Can a machine behave like a music theorist? It presents MUS-ROVER, a self-learning system for automatically discovering rules from symbolic music. MUS-ROVER performs feature learning via n-gram models to extract compositional rules --- statistical patterns over the resulting features. We evaluate MUS-ROVER on Bachs (SATB) chorales, demonstrating that it can recover known rules, as well as identify new, characteristic patterns for further study. We discuss how the extracted rules can be used in both machine and human composition. Accounting for Taste: Ranking Curators and Content in Social Networks Haizi Yu, Biplab Deka, Jerry O. Talton, and Ranjitha Kumar Proceedings of CHI '16 Ranking users in social networks is a well-studied problem, typically solved by algorithms that leverage network structure to identify influential users and recommend people to follow. In the last decade, however, curation --- users sharing and promoting content in a network --- has become a central social activity, as platforms like Facebook, Twitter, Pinterest, and GitHub drive growth and engagement by connecting users through content and content to users. While existing algorithms reward users that are highly active with higher rankings, they fail to account for users' curatorial taste. This paper introduces CuRank, an algorithm for ranking users and content in social networks by explicitly modeling three characteristics of a good curator: discerning taste, high activity, and timeliness. We evaluate CuRank on datasets from two popular social networks --- GitHub and Vine --- and demonstrate its efficacy at ranking content and identifying good curators. What Makes a Brand Look Expensive? Jingxian Zhang, Neel Kothari, Asad Butt, and Ranjitha Kumar Extended Abstracts of CHI '16 Branding is a powerful tool that companies use to control the perception of their products' quality and price. A company's website is a digital vehicle for conveying this brand information. The look and feel of a website often influence a customer's impression of a brand's price category. To understand what makes a brand look expensive, we evaluate the website designs of two industries --- watches and cars. We ran a crowdsourced study to collect ratings of perceived cost based on web page screenshots. By training a random forest regression model over these ratings, we learned which visual features of website design are predictive of perceived cost. Webzeitgeist: Design Mining the Web Ranjitha Kumar, Arvind Satyanarayan, Cesar Torres, Maxine Lim, Salman Ahmad, Scott R. Klemmer, and Jerry O. Talton Proceedings of CHI '13 BEST PAPER AWARD Advances in data mining and knowledge discovery have transformed the way Web sites are designed. However, while visual presentation is an intrinsic part of the Web, traditional data mining techniques ignore render-time page structures and their attributes. This paper introduces design mining for the Web: using knowledge discovery techniques to understand design demographics, automate design curation, and support data-driven design tools. This idea is manifest in Webzeitgeist, a platform for large-scale design mining comprising a repository of over 100,000 Web pages and 100 million design elements. This paper describes the principles driving design mining, the implementation of the Webzeitgeist architecture, and the new class of data-driven design applications it enables. Learning Structural Semantics for the Web Maxine Lim, Ranjitha Kumar, Arvind Satyanarayan, Cesar Torres, Jerry O. Talton, and Scott R. Klemmer Stanford University CSTR 2012-03 Researchers have long envisioned a Semantic Web, where unstructured Web content is replaced by documents with rich semantic annotations. Unfortunately, this vision has been hampered by the difficulty of acquiring semantic metadata for Web pages. This paper introduces a method for automatically 'semantifying' structural page elements: using machine learning to train classifiers that can be applied in a post-hoc fashion. We focus on one popular class of semantic identifiers: those concerned with the structureor information architectureof a page. To determine the set of structural semantics to learn and to collect training data for the learning, we gather a large corpus of labeled page elements from a set of online workers. We discuss the results from this collection and demonstrate that our classifiers learn structural semantics in a general way. Learning Design Patterns with Bayesian Grammar Induction Jerry O. Talton, Lingfeng Yang, Ranjitha Kumar, Maxine Lim, Noah D. Goodman, and Radomr Mch Proceedings of UIST '12 BEST PAPER NOMINEE Design patterns have proven useful in many creative fields, providing content creators with archetypal, reusable guidelines to leverage in projects. Creating such patterns, however, is a time-consuming, manual process, typically relegated to a few experts in any given domain. In this paper, we describe an algorithmic method for learning design patterns directly from data using techniques from natural language processing and structured concept learning. Given a set of labeled, hierarchical designs as input, we induce a probabilistic formal grammar over these exemplars. Once learned, this grammar encodes a set of generative rules for the class of designs, which can be sampled to synthesize novel artifacts. We demonstrate the method on geometric models and Web pages, and discuss how the learned patterns can drive new interaction mechanisms for content creators. Data-Driven Web Design Ranjitha Kumar, Jerry O. Talton, Salman Ahmad, and Scott R. Klemmer Proceedings of ICML '12 INVITED APPLICATIONS PAPER This short paper summarizes challenges and opportunities of applying machine learning methods to Web design problems, and describes how structured prediction, deep learning, and probabilistic program induction can enable useful interactions for designers. We intend for these techniques to foster new work in data-driven Web design. Flexible Tree Matching Ranjitha Kumar, Jerry O. Talton, Salman Ahmad, Tim Roughgarden, and Scott R. Klemmer Proceedings of IJCAI '11 INVITED PAPER Tree-matching problems arise in many computational domains. The literature provides several methods for creating correspondences between labeled trees; however, by definition, tree-matching algorithms rigidly preserve ancestry. That is, once two nodes have been placed in correspondence, their descendants must be matched as well. We introduce flexible tree matching, which relaxes this rigid requirement in favor of a tunable formulation in which the role of hierarchy can be controlled. We show that flexible tree matching is strongly NP-complete, give a stochastic approximation algorithm for the problem, and demonstrate how structured prediction techniques can learn the algorithm's parameters from a set of example matchings. Finally, we present results from applying the method to tasks in Web design. Bricolage: Example-Based Retargeting for Web Design Ranjitha Kumar, Jerry O. Talton, Salman Ahmad, and Scott R. Klemmer Proceedings of CHI '11 BEST PAPER AWARD The Web provides a corpus of design examples unparalleled in human history. However, leveraging existing designs to produce new pages is often difficult. This paper introduces the Bricolage algorithm for transferring design and content between Web pages. Bricolage employs a novel, structured-prediction technique that learns to create coherent mappings between pages by training on human-generated exemplars. The produced mappings are then used to automatically transfer the content from one page into the style and layout of another. We show that Bricolage can learn to accurately reproduce human page mappings, and that it provides a general, efficient, and automatic technique for retargeting content between a variety of real Web pages. Designing with Interactive Example Galleries Brian Lee, Savil Srivastava, Ranjitha Kumar, Ronen Brafman, and Scott R Klemmer Proceedings of CHI '10 Designers often use examples for inspiration; examples offer contextualized instances of how form and content integrate. Can interactive example galleries bring this practice to everyday users doing design work, and does working with examples help the designs they create? This paper explores whether people can realize significant value from explicit mechanisms for designing by example modification. We present the results of three studies, finding that independent raters prefer designs created with the aid of examples, that users prefer adaptively selected examples to random ones, and that users make use of multiple examples when creating new designs. To enable these studies and demonstrate how software tools can facilitate designing with examples, we introduce interface techniques for browsing and borrowing from a corpus of examples, manifest in the Adaptive Ideas Web design tool. Adaptive Ideas leverages a faceted metadata interface for viewing and navigating example galleries. NEWS Google Faculty Research Award for 'Design Mining Android Apps at Scale' renewed for 2nd year Received AWS Machine Learning Research Award with David Forsyth for 'Using Fashion to Learn Material Similarities' Received Amazon Research Award for 'An Experimentation Engine for Personal Fashion' NSF CAREER proposal on 'Tying Design to Outcomes: Open-sourced Analytics for Mobile App Testing' recommended for funding Our groups work on identifying fashion influencers on social media covered in CNN future of fashion article Want to understand how mobile design patterns perform? Benchmark your app design against competitors? Try ZIPT! Rico, the largest repository of mobile app designs to date, is available for download Received Adobe Research Award for 'Probabilistic Generative Models for Mobile Design' GROUP PHD Biplab Deka '17 McKinsey & Company Kristen Vaccaro Jinda Han Deniz Arsan MS Sujay Khandekar Thomas Liu Krishna Dusad Abhishek Harish '16 Google BS Ziqiao Ding Qinglin Chen Mark Craft Hanzi (Amber) Shen '17 Amazon Dana Chambourova '17 Flexport Chad Franzen '17 Google Forrest Zifeng Huang '17 UC Berkeley PhD Student Kedan Li '16 Fitbit Erik Luo '16 Google TEACHING SPRING 2019 TE100: Introduction to Innovation, Leadership, and Engineering Entrepreneurship CS199US: The Underground Unicorn Seminar FALL 2017 CS498RK: The Art of Web Programming SPRING 2017 CS598RK: Data-Driven Design CS199US: The Underground Unicorn Seminar FALL 2016 CS498RK: The Art of Web Programming SPRING 2016 CS498RK: The Art and Science of Web Programming FALL 2015 CS598RK: Data-Driven Design SPRING 2015 CS498RK: The Art and Science of Web Programming CS199RK: Research with Design, Data, and the Web FALL 2014 CS598RK: Data-Driven Design 
