Search this site Ling Ren I will join the Computer Science Department at University of Illinois, Urbana-Champaign as an assistant professor in 2019, after spending a year at VMware Research Group . I am looking for PhD students. If you are interested in working with me, please apply to UIUC CS and send me an email (renling at illinois dot edu). Research I work on applied cryptography, computer security and distributed algorithms. My research has been as theoretical as asymptotically better algorithms , and as practical as taping out a processor . I worked on Oblivious RAM (ORAM) algorithms and hardware implementations. We taped out a secure processor called Ascend with an on-chip Path ORAM controller that encrypts, shuffles and integrity-verifies external memory. Recently, I have been working on consensus algorithms and blockchain protocols. Selected Publications For a full list, see my Google Scholar page . Ittai Abraham, Srinivas Devadas, Danny Dolev, Kartik Nayak, and Ling Ren . Synchronous Byzantine Agreement with Expected O(1) Rounds, Expected O(n^2) Communication, and Optimal Resilience . Financial Cryptography and Data Security (FC), 2019 Jeremiah Blocki, Ling Ren , and Samson Zhou. Bandwidth-Hard Functions: Reductions and Lower Bounds . Computer & Communications Security (CCS), 2018. Ittai Abraham, Dahlia Malkhi, Kartik Nayak, Ling Ren , and Alexander Spiegelman. Solida: A Blockchain Protocol Based on Reconfigurable Byzantine Consensus . International Conference on Principles of Distributed Systems (OPODIS), 2017. Srinivas Devadas, Ling Ren and Hanshen Xiao. On Iterative Collision Search for LPN and Subset Sum . Theory of Cryptography Conference (TCC), 2017. Ling Ren and Srinivas Devadas. Bandwidth Hard Functions for ASIC Resistance . Theory of Cryptography Conference (TCC), 2017. Ling Ren , Christopher Fletcher, Albert Kwon, Marten van Dijk, and Srinivas Devadas. Design and Implementation of the Ascend Secure Processor. IEEE Transactions on Dependable and Secure Computing (TDSC), 2017. Ittai Abraham, Christopher Fletcher, Kartik Nayak, Benny Pinkas, and Ling Ren . Asymptotically Tight Bounds for Composing ORAM with PIR . International Workshop on Public Key Cryptography (PKC), 2017. Ling Ren , Srinivas Devadas. Proof of Space from Stacked Expanders . Theory of Cryptography Conference (TCC), 2016. Charles Herder, Ling Ren , Marten van Dijk, Meng-Day Yu, and Srinivas Devadas. Trapdoor Computational Fuzzy Extractors and Stateless Cryptographically Secure Physical Unclonable Functions . IEEE Transactions on Dependable and Secure Computing (TDSC), 2016 Srinivas Devadas, Marten van Dijk, Christopher Fletcher, Ling Ren , Elaine Shi, and Daniel Wichs. Onion ORAM: A Constant Bandwidth Blowup Oblivious RAM . Theory of Cryptography Conference (TCC), 2016. Ling Ren , Christopher Fletcher, Albert Kwon, Emil Stefanov, Elaine Shi, Marten van Dijk, and Srinivas Devadas. Constants Count: Practical Improvements to Oblivious RAM . USENIX Security, 2015. Christopher Fletcher, Ling Ren , Albert Kwon, Marten van Dijk, Emil Stefanov, Dimitrios Serpanos, and Srinivas Devadas. A Low-Latency, Low-Area Hardware Oblivious RAM Controller . Symposium on Field-programmable Custom Computing Machines (FCCM), 2015. Christopher Fletcher, Ling Ren , Albert Kwon, Marten van Dijk, and Srinivas Devadas. Freecursive ORAM: [Nearly] Free Recursion and Integrity Verification for Position-based ORAMs. Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2015. Emil Stefanov, Marten van Dijk, Elaine Shi, Christopher Fletcher, Ling Ren , Xiangyao Yu, and Srinivas Devadas. Path ORAM: An Extremely Simple Oblivious RAM Protocol . Computer & Communications Security (CCS), 2013. Best Student Paper Award. Ling Ren , Xiangyao Yu, Christopher Fletcher, Marten Van Dijk, and Srinivas Devadas. Design Space Exploration and Optimization of Path Oblivious RAM in Secure Processors . International Symposium on Computer Architecture (ISCA), 2013. Teaching 6.046J Design and Analysis of Algorithms, fall 2017. Made with the new GoogleSites , an effortless way to create beautifulsites. Create a site Report abuse
