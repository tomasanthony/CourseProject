 Peter Sewell Professor of Computer Science, Computer Laboratory , University of Cambridge Member of the Cambridge Programming, Logic, and Semantics Group Fellow of Wolfson college Here are my contact details , a photo , short bio , and CV PhD students, RAs, and Co-authors Meetings Funding Papers (by date) Papers (by topic) Teaching The 2017-18 Part 1B Semantics of Programming Languages course . The 2017-18 Multicore Semantics and Programming (R204) ACS MPhil module ...previous teaching Research My research aims to put the engineering of real-world computer systems on better foundations, developing techniques (both mathematically rigorous and pragmatically useful) to make systems that are better-understood, more robust, and more secure. This applied semantics needs tightly integrated theoretical and practical research, spanning a range of Computer Science: I work in architectural description, programming languages, networking, and security, developing and using techniques from semantics, type systems, automated reasoning, and concurrency theory. This work currently forms part of the REMS: Rigorous Engineering for Mainstream Systems project, an EPSRC Programme Grant in collaboration with Systems, Security, Architecture, and Semantics researchers from Cambridge, Imperial, and Edinburgh, and with colleagues in ARM, IBM, and elsewhere. REMS is exploring how we can use rigorous mathematics to improve engineering practice for mainstream computer systems, to make them more robust and secure. The REMS pages give the associated people, papers, models, and tools. Recent Papers CheriABI: Enforcing Valid Pointer Provenance and Minimizing Pointer Privilege in the POSIX C Run-time Environment . Brooks Davis, Robert N.M. Watson, Alexander Richardson, PeterG. Neumann, SimonW. Moore, John Baldwin, David Chisnall, James Clarke, NathanielWesley Filardo, Khilan Gudka, Alexandre Joannou, Ben Laurie, A.Theodore Markettos, J.Edward Maste, Alfredo Mazzinghi, EdwardTomasz Napierala, RobertM. Norton, Michael Roe, Peter Sewell, Stacey Son, and Jonathan Woodruff. In ASPLOS 2019. [ bib | pdf | abstract ] REMS: Rigorous Engineering for Mainstream Systems. Summary 2013-03 -- 2019-01 , Peter Sewell, February 2019. [ bib | pdf | abstract ] Exploring C Semantics and Pointer Provenance . Kayvan Memarian, Victor B.F. Gomes, Brooks Davis, Stephen Kell, Alexander Richardson, Robert N.M. Watson, and Peter Sewell. In POPL 2019, Proc. ACM Program. Lang. 3, POPL, Article 67. [ bib | doi | supplementary material | project page | pdf | abstract ] ISA Semantics for ARMv8-A, RISC-V, and CHERI-MIPS . Alasdair Armstrong, Thomas Bauereiss, Brian Campbell, Alastair Reid, KathrynE. Gray, RobertM. Norton, Prashanth Mundkur, Mark Wassell, Jon French, Christopher Pulte, Shaked Flur, Ian Stark, Neel Krishnaswami, and Peter Sewell. In POPL 2019, Proc. ACM Program. Lang. 3, POPL, Article 71. [ bib | doi | supplementary material | project page | pdf | abstract ] Engineering with Logic: Rigorous Test-Oracle Specification and Validation for TCP/IP and the Sockets API . Steve Bishop, Matthew Fairbairn, Hannes Mehnert, Michael Norrish, Tom Ridge, Peter Sewell, Michael Smith, and Keith Wansbrough. J. ACM , 66(1):1:1--1:77, December 2018. [ bib | doi | project page | pdf | http | abstract ] The RISC-V Instruction Set Manual Volume I: Unprivileged ISA . Andrew Waterman and Krste Asanovi, editors. December 2018. Document Version 20181221-Public-Review-draft. Contributors: Arvind, Krste Asanovi, Rimas Aviienis, Jacob Bachmeyer, Christopher F. Batten, Allen J. Baum, Alex Bradbury, Scott Beamer, Preston Briggs, Christopher Celio, Chuanhua Chang, David Chisnall, Paul Clayton, Palmer Dabbelt, Roger Espasa, Shaked Flur, Stefan Freudenberger, Jan Gray, Michael Hamburg, John Hauser, David Horner, Bruce Hoult, Alexandre Joannou, Olof Johansson, Ben Keller, Yunsup Lee, Paul Loewenstein, Daniel Lustig, Yatin Manerkar, Luc Maranget, Margaret Martonosi, Joseph Myers, Vijayanand Nagarajan, Rishiyur Nikhil, Jonas Oberhauser, Stefan O'Rear, Albert Ou, John Ousterhout, David Patterson, Christopher Pulte, Jose Renau, Colin Schmidt, Peter Sewell, Susmit Sarkar, Michael Taylor, Wesley Terpstra, Matt Thomas, Tommy Thorn, Caroline Trippel, Ray VanDeWalker, Muralidaran Vijayaraghavan, Megan Wachs, Andrew Waterman, Robert Watson, Derek Williams, Andrew Wright, Reinoud Zandijk, and Sizhuo Zhang. [ bib | pdf ] Simplifying ARM Concurrency: Multicopy-atomic Axiomatic and Operational Models for ARMv8 . Christopher Pulte, Shaked Flur, Will Deacon, Jon French, Susmit Sarkar, and Peter Sewell. In POPL 2018. [ bib | doi | project page | pdf | abstract ] Mixed-size Concurrency: ARM, POWER, C/C++11, and SC . Shaked Flur, Susmit Sarkar, Christopher Pulte, Kyndylan Nienhuis, Luc Maranget, KathrynE. Gray, Ali Sezgin, Mark Batty, and Peter Sewell. In POPL 2017. [ bib | doi | project page | pdf | abstract ] The missing link: explaining ELF static linking, semantically . Stephen Kell, DominicP. Mulligan, and Peter Sewell. In OOPSLA 2016. [ bib | doi | project page | pdf | http | abstract ] An operational semantics for C/C++11 concurrency . Kyndylan Nienhuis, Kayvan Memarian, and Peter Sewell. In OOPSLA 2016. [ bib | doi | pdf | http | abstract ] Into the depths of C: elaborating the de facto standards . Kayvan Memarian, Justus Matthiesen, James Lingard, Kyndylan Nienhuis, David Chisnall, RobertN.M. Watson, and Peter Sewell. In PLDI 2016, PLDI 2016 Distinguished Paper award. [ bib | doi | project page | pdf | http | abstract ] Research Topics ISA semantics and Sail (project page) Relaxed-memory concurrency Relaxed-memory concurrency: Power, ARM, and RISC-V ( rmem tool for ARM, POWER, RISC-V, and x86) Relaxed-memory concurrency: C/C++11 ( cppmem tool ) Relaxed-memory concurrency: x86 Relaxed-memory concurrency: the CompCert-TSO verified compiler (project page) Relaxed-memory concurrency: general Cerberus: C semantics (project page) ( Cerberus tool ) LinkSem: ELF linking semantics (project page) SibylFS: POSIX filesystem semantics (project page) nqsb-TLS (project page) Tool support for semantics Lem: tool support for semantics (project page) Ott: tool support for semantics (project page) The POPLmark challenge (project page) Netsem: semantics for TCP, UDP, and Sockets (project page) Type-safe distributed languages ( Acute and HashCaml ) Dynamic update Java modules (project page) Language and communication infrastructure for mobile computation: Nomadic Pict (project page) Security policy Anonymity Secure encapsulation Iota: XML scripting Observational concurrent language semantics Process calculi Models for name-passing processes From rewrite rules to bisimulation congruences Locality typing Pi calculus tutorials Finite Axiomatisability Hardware model abstraction Misc Plasma Physics I also maintain a page of Action Calculi links. Other Another photo [Validate this page.] 
