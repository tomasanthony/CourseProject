Franois joined the Department as a Lecturer in Secure Systems in June 2016. Before joining the Department, he was a post-doctoral researcher at the IMDEA Software Institute, working mainly with Gilles Barthe, Pierre-Yves Strub and Benjamin Grgoire (Inria Sophia-Antipolis -- Mditerrane). In 2013, he received a PhD from the Open University for his work on "Proving Cryptographic C Programs Secure with General-Purpose Verification Tools", under the supervision of Andy Gordon, Jan Jrjens and Bashar Nuseibeh. His PhD was supported by a Microsoft Research PhD Scholarship. During the course of his PhD, he worked as a research intern at the European Microsoft Innovation Center (Aachen, Germany), as well as at Microsoft Research in Redmond and Cambridge.Franois's research revolves around proving cryptographic, side-channel and partial compromise security properties of concrete realizations and implementations of cryptographic primitives and protocols. This involves tackling problems in modelling adversaries and systems, designing and applying proof methodologies and verification tools, and generally finding less tedious ways of verifying complex properties of important (but not vast) quantities of code.In the past, he briefly worked on abstract interpretation and some aspects of programming and natural languages.A full list of publications can be found on my personal website.16.04.18Read more15.03.18Read moreFranois's research revolves around proving cryptographic, side-channel and partial compromise security properties of concrete realizations and implementations of cryptographic primitives and protocols. This involves tackling problems in modelling adversaries and systems, designing and applying proof methodologies and verification tools, and generally finding less tedious ways of verifying complex properties of important (but not vast) quantities of code.In the past, he briefly worked on abstract interpretation and some aspects of programming and natural languages.Computer Science BSc (Hons)Computing and Information Technology BSc (Hons)Although such an attack could only be launched when the MEE-CBC component is used in isolation ? Albrecht and Paterson recently confirmed in independent work that s2n?s second line of defence, once reinforced, provides adequate mitigation against current adversary capabilities ? its existence serves as further evidence to the fact that conventional software validation processes are not effective in the study and validation of security properties. To solve this problem, we define a methodology for proving security of implementations in the presence of timing attackers: first, prove black-box security of an algorithmic description of a cryptographic construction; then, establish functional correctness of an implementation with respect to the algorithmic description; and finally, prove that the implementation is leakage secure.We present a proof-of-concept application of our methodology to MEE-CBC, bringing together three different formal verification tools to produce an assembly implementation of this construction that is verifiably secure against adversaries with access to some timing leakage. Our methodology subsumes previous work connecting provable security and side-channel analysis at the implementation level, and supports the verification of a much larger case study. Our case study itself provides the first provable security validation of complex timing countermeasures deployed, for example, in OpenSSL.
