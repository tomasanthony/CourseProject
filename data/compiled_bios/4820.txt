 Andrew Myers Professor, Department of Computer Science, Cornell University Email: [click here] Office: Gates 428, phone 5-8597. Office hour W11 am -12. Fall 2018: teaching CS 6113, Language-Based Security Spring 2019: teaching CS 4120, Introduction to Compilers publications short bio blog Supporting our research Software andservices Jif Polyglot Fabric Genus SHErrLoc SecVerilog Civitas CIVS JMatch Review Normalizer CMSX Other software Graduated PhDstudents Steve Zdancewic Nathaniel Nystrom Lantian Zheng Stephen Chong Michael Clarkson Xin Qi Jed Liu K. Vikram Danfeng Zhang Owen Arden Chinawat Isradisaikul Current students Tom Magrino Yizhou Zhang Isaac Sheff Matthew Milano Ethan Cecchetti Rolph Recto Drew Zagieboylo Josh Acay Siqiu Yao Affiliations Cornell University Computer Science Applied Programming Languages Group Computer Systems Laboratory (CSL) Electrical and Computer Engineering Systems Engineering Research interests It is too hard to build trustworthy software systems. I aim for simple, high-level abstractions that offer programmers strong guarantees about cross-cutting concerns: security , distribution , extensibility , persistence . Selected recent publications Efficient, consistent distributed computation with predictive treaties ( Eurosys'19 ) Low-coordination enforcement of semantic consistency using time-dependent predicates Abstraction-safe effect handlers via tunneling ( POPL'19 ) Fixing a fundamental modularity problem in algebraic effects (and exceptions, dynamic scope,...) Secure autonomous cyber-physical systems through verifiable information flow control ( CPS-SPC'18 ) Software and hardware codesign to improve assurance of cyberphysical systems Hyperflow: A processor architecture for nonmalleable, timing-safe information-flow security ( CCS'18 ) Information flow helps design a secure processor that controls timing channels MixT: a language for mixing consistency in geodistributed transactions ( PLDI'18 ) Atomic, mixed-consistency transactions, checked using information flow more... Current Projects Reduct , a game for teaching programming. Familia and Genus: OO languages that improve generic programming and exception handling. Fabric: A language and system for secure, distributed computation, sharing, and storage. SHErrLoc : The Static Holistic Error Locator identifies the most likely locations of program errors by analyzing the entire program constraint graph. SecVerilog : a hardware description language for controlling timing channels. Jif : an extended version of Java that enforces security and privacy by controlling information flow. Civitas: A practical, secure, remote voting system. Polyglot : a widely used, extensible Java compiler front end framework for rapid experimentation with new language extensions. Editor in Chief, ACM Transactions on Programming Languages and Systems (TOPLAS) Undergraduate and MEng research opportunities [Show older projects] Older Projects Awards committees: ACM Doctoral Dissertation Award Committee, 2015-2018 (2017 chair) Editorial Boards: Journal of Computer Security (Co-Editor in Chief, 20132016) ACM Transactions on Computer Systems (20092016), ACM Transactions on Information and System Security (TISSEC, now TOPS ) (20072010) Program Committees: PC Chair, POPL 2018 [ report ]; Co-chair, CCS 2016 [ report ]; Co-chair, Computer Security Foundations 2010 ; Co-chair, IEEE Symposium on Security & Privacy (Oakland) '09 ; Co-chair, Principles of Security and Trust (POST) '15 ; PC member, IEEE S&P (Oakland) '01, '04, '07, '08, '09 , '11 , '12 , '15 , PLDI '02 , '10 , '16 (EPC) , SOSP '01 , '07 , '09 , '11 , CSF/CSFW '04, '06 , '09 , '10 , '15 , Euro S&P 2016 POST'14 , Eurosys'14 , ASPLOS '13 , '14 (ERC), TLDI '09 , PLAS '08 , OOPSLA'06 , HOTDEP'06 , USENIX Security '06 , FAST'05 , POPL '05 , '12 , '17 , SecDev 2016 SNAPL '15 , OSDI '00, '04 , CCS '04 , '12 , '13 , '14 , '16 , SIGOPS European Workshop '04 , NDSS'04 , FOOL'00 . 20152016: Cayuga Heights Elementary School Math Club (5th grade) JMatch : a Java extension with pattern matching and interruptible iterators Swift: Making web applications secure by construction. Jx/J& : language features for extensible, composable, adaptable software J\Mask: Java extended with masked types for safe, flexible object initialization. SIF: Servlets with secure information flow. STONESOUP: an IARPA-funded study on how to certify and run software of uncertain provenance securely DARPA Information Science and Technology Study Group (ISAT), 20052008 Jif/split: a version of Jif that automatically partitions programs to run securely on a distributed system. J 0 : Java for novice programmers PolyJ : an extended version of Java that supports parametric polymorphism, freely available for both Windows and Unix. Thor , a distributed object-oriented database, and Theta , the internal programming language of Thor. This work provided scalable techniques for efficiently implementing distributed, persistent objects and language features such as methods and parametric polymorphism . Organizer, Dagstuhl seminar on Mobility, Ubiquity, and Security (Feb.'07) Invited and keynote talks: POPL 2013 , ICISS 2010 , FMOODS 2008 , ESOP'05 , PASTE'05 , FMSE 2005 [Show courses taught] Courses PLDI 2014 Tutorial: The Polyglot Extensible Compiler Framework. June 2014. Oregon PL Summer School on Logic, Languages, Compilation, and Verification , July 2012. [ notes ] Summer School Marktoberdorf 2009: Using Security Policies to Write Secure Software PLDI 2006 tutorial: Expressing and Enforcing Security with Programming Languages Oregon Summer School on Software Security , June 2004 CGO'03 tutorial: Security through Languages and Compilers CS211 (2110), Computers and Programming (S06) CS2112, Data Structures and Object-Oriented DesignHonors (S/F12,S/F14,F15) CS3110, Data Structures and Functional Programming (S02S04,S07,S08,F08) [ CS312 Tournaments ] CS4120/4121/5120/5121, Introduction to Compilers (S99S01,F09,F11,S16,S18,S19) CS513 (5430), System Security ( F06 ) CS6110, Advanced Programming Languages (F99F01, F04F05, F07, S09, S13) CS6113, Language-Based Security ( F13 , F18 ) CS 6115, Certified Software Systems (F17) CS711, Advanced Programming Languages Seminar ( F02 , F03 ) Engineering 150 (F04, F06) CS754 (7490), Cornell Systems Lunch (20012010) (with E. Gn Sirer, Paul Francis, Robbert van Renesse) 
